<<오류 : .git(로컬리파지토리)를 home에 설치하면 디렉터리에 상관없이 변경된 파일들이 자동으로 업데이트 되는 줄 알고 디렉터리 구분없이 홈 위치에 설치했음 >>



  ll    : alias ll='ls -algs': 설치된 목록 보기인데, 저 algs가 정확히 뭐엿지..? ls와 비교해 봤을때, 좀 더 자세하게 출력되긴 하넹
  ls    : 디렉토리(directory)에 있는 내용(디렉토리, 파일 등)을 확인
  ls -algs    
  mv .git backup_git    : 기존의 로컬 리파지토리를 삭제  
  ll    : 잘 삭제 되었는지 확인
  mkdir workspace   : 디렉토리 생성 ( 폴더 생성 ) >> 디렉터리 = 폴더 = 카탈로그
  cd workspace/   : 폴더로 이동, 폴더일 때는 마지막에 / 사용
  vi .bash_profile    : .bash_profile을 vi편집기로 실행하여 환경변수를 변경 >> 명령어를 명명하기 위해 사용하는 파일이 .bash_profile 
  source .bash_profile    : 수정된 환경설정을 .bash_profile이 적용되도록 한다
  ll
  cd -    : 이전 디렉터리로 이동 


-------------------------<참고>---------------------------------------
cd /
	루트 디렉토리(/)로 이동

cd .
	현재 디렉터리로 이동 

cd ..
	상위 디렉터리로 이동


cd ~ 
	자신의 홈 디렉터리(~)로 이동한다.

절대경로 
	: 경로최초의 시작점(루트)으로 경유한 경로를 전부 기입하는 방식를 사용하여 이동
	 최상위 디렉터리 반드시 포함 된 경로
	Ex) cd /Users/pro/workspace/study/study_linux_centos

상대경로
	: 현재 디렉토리(비교 대상)를 기준으로 작성된 경로
	cd ./workspace/study
-----------------------------------------------------------------------------
  
  
  ll
  mkdir study   : study 디렉터리에 python, js, html 등 공부한 것을 정리해 올려야지
  cd study	: 생성된 폴더로 이동
  ll		: 내용물 확인
  pwd		: 클론할 거니까, 현 위치를 잘 확인하자
  git clone https://github.com/kzh4295/study_js.git	: github사이트의 저장된 서버리파지토리를 통째로 클론하므로, 번거로움을 줄일 수 있다
  ll		: 내용 확인
  cd study_js/		:해당 폴더에 서버리파지토리와 동일하게 클론되었는지 확인하기 위해 이동
  ll		: 알맞게 클론 되었는지 내용 확인
  cat README.md		: 파일의 내용을 화면에 출력
  echo "This is My Study Repository" >> README.md
  git add --all		: working directory에서 로컬리파지토리로 들어갈 준비시킴
  git commit -am "first"	: 로컬리파지토리로 커밋시킴 a는 add 안한 것도 시켜줄려고 써준거므로 생략 가능 " 커밋 메시지 "
  git push		: 원격리파지토리로 push
  
  
  
<<해결 과정 요약  깨달음>>
  - 디렉터리 위치를 잘 보고 설치하자 (pwd, ll 수시로!)
  - bash_profile은 환경설정과 관련되는구나
  - 절대경로, 상대경로
  - add(로컬 리파지토리에 들어갈 준비) >> commit(로컬리파지토리로 보냄) >> push(원격리파지토리로 보냄)
  - git clone : 프로젝트에서 분업, 다른 컴퓨터에서 이용하기 위해 사용하는데 이 경우, pull을 먼저하고 상위폴더를 만든 후에 원격리파지토리를 통째로 가져와 번거로움을 줄이자
